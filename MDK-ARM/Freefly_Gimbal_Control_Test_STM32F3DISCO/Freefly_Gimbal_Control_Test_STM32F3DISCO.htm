<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [Freefly_Gimbal_Control_Test_STM32F3DISCO\Freefly_Gimbal_Control_Test_STM32F3DISCO.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image Freefly_Gimbal_Control_Test_STM32F3DISCO\Freefly_Gimbal_Control_Test_STM32F3DISCO.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6230001: Last Updated: Sat Aug  2 23:41:00 2025
<BR><P>
<H3>Maximum Stack Usage =        344 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[39]">ADC3_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[44]">ADC4_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f3xx_it.o(.text.BusFault_Handler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[1f]">CAN_RX1_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[20]">CAN_SCE_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[45]">COMP1_2_3_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[46]">COMP4_5_6_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[47]">COMP7_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[3f]">DMA2_Channel1_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[40]">DMA2_Channel2_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[41]">DMA2_Channel3_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[42]">DMA2_Channel4_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[43]">DMA2_Channel5_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f3xx_it.o(.text.DebugMon_Handler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[12]">EXTI2_TSC_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[4b]">FPU_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f3xx_it.o(.text.HardFault_Handler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[54]">L3GD20_DeInit</a> from l3gd20.o(.text.L3GD20_DeInit) referenced from l3gd20.o(.data.L3gd20Drv)
 <LI><a href="#[5a]">L3GD20_DisableIT</a> from l3gd20.o(.text.L3GD20_DisableIT) referenced from l3gd20.o(.data.L3gd20Drv)
 <LI><a href="#[59]">L3GD20_EnableIT</a> from l3gd20.o(.text.L3GD20_EnableIT) referenced from l3gd20.o(.data.L3gd20Drv)
 <LI><a href="#[5c]">L3GD20_FilterCmd</a> from l3gd20.o(.text.L3GD20_FilterCmd) referenced from l3gd20.o(.data.L3gd20Drv)
 <LI><a href="#[5b]">L3GD20_FilterConfig</a> from l3gd20.o(.text.L3GD20_FilterConfig) referenced from l3gd20.o(.data.L3gd20Drv)
 <LI><a href="#[58]">L3GD20_INT1InterruptConfig</a> from l3gd20.o(.text.L3GD20_INT1InterruptConfig) referenced from l3gd20.o(.data.L3gd20Drv)
 <LI><a href="#[53]">L3GD20_Init</a> from l3gd20.o(.text.L3GD20_Init) referenced from l3gd20.o(.data.L3gd20Drv)
 <LI><a href="#[57]">L3GD20_LowPower</a> from l3gd20.o(.text.L3GD20_LowPower) referenced from l3gd20.o(.data.L3gd20Drv)
 <LI><a href="#[55]">L3GD20_ReadID</a> from l3gd20.o(.text.L3GD20_ReadID) referenced from l3gd20.o(.data.L3gd20Drv)
 <LI><a href="#[5d]">L3GD20_ReadXYZAngRate</a> from l3gd20.o(.text.L3GD20_ReadXYZAngRate) referenced from l3gd20.o(.data.L3gd20Drv)
 <LI><a href="#[56]">L3GD20_RebootCmd</a> from l3gd20.o(.text.L3GD20_RebootCmd) referenced from l3gd20.o(.data.L3gd20Drv)
 <LI><a href="#[5f]">LSM303DLHC_AccDeInit</a> from lsm303dlhc.o(.text.LSM303DLHC_AccDeInit) referenced from lsm303dlhc.o(.data.Lsm303dlhcDrv)
 <LI><a href="#[64]">LSM303DLHC_AccFilterCmd</a> from lsm303dlhc.o(.text.LSM303DLHC_AccFilterCmd) referenced from lsm303dlhc.o(.data.Lsm303dlhcDrv)
 <LI><a href="#[63]">LSM303DLHC_AccFilterConfig</a> from lsm303dlhc.o(.text.LSM303DLHC_AccFilterConfig) referenced from lsm303dlhc.o(.data.Lsm303dlhcDrv)
 <LI><a href="#[5e]">LSM303DLHC_AccInit</a> from lsm303dlhc.o(.text.LSM303DLHC_AccInit) referenced from lsm303dlhc.o(.data.Lsm303dlhcDrv)
 <LI><a href="#[60]">LSM303DLHC_AccReadID</a> from lsm303dlhc.o(.text.LSM303DLHC_AccReadID) referenced from lsm303dlhc.o(.data.Lsm303dlhcDrv)
 <LI><a href="#[65]">LSM303DLHC_AccReadXYZ</a> from lsm303dlhc.o(.text.LSM303DLHC_AccReadXYZ) referenced from lsm303dlhc.o(.data.Lsm303dlhcDrv)
 <LI><a href="#[61]">LSM303DLHC_AccRebootCmd</a> from lsm303dlhc.o(.text.LSM303DLHC_AccRebootCmd) referenced from lsm303dlhc.o(.data.Lsm303dlhcDrv)
 <LI><a href="#[62]">LSM303DLHC_AccZClickITConfig</a> from lsm303dlhc.o(.text.LSM303DLHC_AccZClickITConfig) referenced from lsm303dlhc.o(.data.Lsm303dlhcDrv)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f3xx_it.o(.text.MemManage_Handler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f3xx_it.o(.text.NMI_Handler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f3xx_it.o(.text.PendSV_Handler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[50]">QX_ParsePacket_Cli_MoVI_Ctrl_CB</a> from qx_protocol_app.o(.text.QX_ParsePacket_Cli_MoVI_Ctrl_CB) referenced 2 times from qx_protocol_app.o(.text.ff_api_init)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[3a]">SPI3_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f3xx_it.o(.text.SVC_Handler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f3xx_it.o(.text.SysTick_Handler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[4d]">SystemInit</a> from system_stm32f3xx.o(.text.SystemInit) referenced from startup_stm32f303xc.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_TIM15_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_TIM17_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[23]">TIM1_UP_TIM16_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[3d]">TIM6_DAC_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[3e]">TIM7_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[36]">TIM8_UP_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[3b]">UART4_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[3c]">UART5_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[4f]">UART_DMAAbortOnError</a> from stm32f3xx_hal_uart.o(.text.UART_DMAAbortOnError) referenced 2 times from stm32f3xx_hal_uart.o(.text.HAL_UART_IRQHandler)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from stm32f3xx_it.o(.text.USART1_IRQHandler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[4a]">USBWakeUp_RMP_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN_TX_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[48]">USB_HP_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN_RX0_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[49]">USB_LP_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f3xx_it.o(.text.UsageFault_Handler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[4e]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f303xc.o(.text)
 <LI><a href="#[51]">ff_api_init</a> from qx_protocol_app.o(.text.ff_api_init) referenced from qx_protocol_app.o(.data.FreeflyAPI)
 <LI><a href="#[52]">ff_api_send</a> from qx_protocol_app.o(.text.ff_api_send) referenced from qx_protocol_app.o(.data.FreeflyAPI)
 <LI><a href="#[4c]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[4e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(.text)
</UL>
<P><STRONG><a name="[e4]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[66]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[77]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[e5]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[e6]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[e7]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[e8]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[e9]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>ADC4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>COMP1_2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>COMP4_5_6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>COMP7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>USBWakeUp_RMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>USB_HP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_CAN_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>USB_LP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[ea]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[eb]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_TxMsg_Finish
</UL>

<P><STRONG><a name="[c3]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_SendPacket_Cli_WriteABS
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ec]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[6b]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[6d]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[6f]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d6]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d9]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ed]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[ee]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[ef]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>

<P><STRONG><a name="[6c]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[72]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>

<P><STRONG><a name="[74]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[75]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[76]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>

<P><STRONG><a name="[e2]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[f0]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[67]"></a>__scatterload</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[f1]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[f2]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[71]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>

<P><STRONG><a name="[f3]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[f4]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[be]"></a>AddBitsAsByte</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, qx_parsing_functions.o(.text.AddBitsAsByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AddBitsAsByte
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_ParsePacket_Cli_MoVI_Ctrl_CB
</UL>

<P><STRONG><a name="[b8]"></a>AddFloatAsSignedShort</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, qx_parsing_functions.o(.text.AddFloatAsSignedShort))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AddFloatAsSignedShort
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_ParsePacket_Cli_MoVI_Ctrl_CB
</UL>

<P><STRONG><a name="[ba]"></a>AddSignedShortAsSignedShort</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, qx_parsing_functions.o(.text.AddSignedShortAsSignedShort))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AddSignedShortAsSignedShort
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_ParsePacket_Cli_MoVI_Ctrl_CB
</UL>

<P><STRONG><a name="[b6]"></a>AddUnsignedCharAsUnsignedChar</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, qx_parsing_functions.o(.text.AddUnsignedCharAsUnsignedChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AddUnsignedCharAsUnsignedChar
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_ParsePacket_Cli_MoVI_Ctrl_CB
</UL>

<P><STRONG><a name="[bc]"></a>AddUnsignedShortAsUnsignedShort</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, qx_parsing_functions.o(.text.AddUnsignedShortAsUnsignedShort))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AddUnsignedShortAsUnsignedShort
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_ParsePacket_Cli_MoVI_Ctrl_CB
</UL>

<P><STRONG><a name="[d5]"></a>BSP_ACCELERO_GetXYZ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f3_discovery_accelerometer.o(.text.BSP_ACCELERO_GetXYZ))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d1]"></a>BSP_ACCELERO_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f3_discovery_accelerometer.o(.text.BSP_ACCELERO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_ACCELERO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d4]"></a>BSP_GYRO_GetXYZ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f3_discovery_gyroscope.o(.text.BSP_GYRO_GetXYZ))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cf]"></a>BSP_GYRO_Init</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32f3_discovery_gyroscope.o(.text.BSP_GYRO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BSP_GYRO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d0]"></a>BSP_GYRO_ReadID</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f3_discovery_gyroscope.o(.text.BSP_GYRO_ReadID))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f3xx_it.o(.text.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>COMPASSACCELERO_IO_ITConfig</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, stm32f3_discovery.o(.text.COMPASSACCELERO_IO_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = COMPASSACCELERO_IO_ITConfig &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_AccZClickITConfig
</UL>

<P><STRONG><a name="[7c]"></a>COMPASSACCELERO_IO_Init</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, stm32f3_discovery.o(.text.COMPASSACCELERO_IO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = COMPASSACCELERO_IO_Init &rArr; I2Cx_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_AccReadID
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_AccInit
</UL>

<P><STRONG><a name="[7e]"></a>COMPASSACCELERO_IO_Read</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, stm32f3_discovery.o(.text.COMPASSACCELERO_IO_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = COMPASSACCELERO_IO_Read &rArr; I2Cx_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_AccReadXYZ
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_AccFilterCmd
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_AccFilterConfig
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_AccZClickITConfig
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_AccRebootCmd
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_AccReadID
</UL>

<P><STRONG><a name="[81]"></a>COMPASSACCELERO_IO_Write</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, stm32f3_discovery.o(.text.COMPASSACCELERO_IO_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = COMPASSACCELERO_IO_Write &rArr; I2Cx_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_AccFilterCmd
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_AccFilterConfig
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_AccZClickITConfig
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_AccRebootCmd
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_AccInit
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f3xx_it.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[ad]"></a>FIFO_Buf_Add</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, fifo_buf.o(.text.FIFO_Buf_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FIFO_Buf_Add
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_SendMsg2CommsPort_CB
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>

<P><STRONG><a name="[d2]"></a>FIFO_Buf_Init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fifo_buf.o(.text.FIFO_Buf_Init))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[af]"></a>FIFO_Buf_Remove</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fifo_buf.o(.text.FIFO_Buf_Remove))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_SendMsg2CommsPort_CB
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
</UL>

<P><STRONG><a name="[83]"></a>GYRO_IO_Init</STRONG> (Thumb, 122 bytes, Stack size 48 bytes, stm32f3_discovery.o(.text.GYRO_IO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GYRO_IO_Init &rArr; SPIx_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_ReadID
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_Init
</UL>

<P><STRONG><a name="[86]"></a>GYRO_IO_Read</STRONG> (Thumb, 206 bytes, Stack size 48 bytes, stm32f3_discovery.o(.text.GYRO_IO_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GYRO_IO_Read &rArr; SPIx_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DeInit
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_ReadXYZAngRate
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_FilterCmd
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_FilterConfig
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_DisableIT
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_EnableIT
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_INT1InterruptConfig
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_RebootCmd
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_ReadID
</UL>

<P><STRONG><a name="[89]"></a>GYRO_IO_Write</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, stm32f3_discovery.o(.text.GYRO_IO_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GYRO_IO_Write &rArr; SPIx_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DeInit
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_FilterCmd
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_FilterConfig
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_DisableIT
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_EnableIT
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_INT1InterruptConfig
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_LowPower
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_RebootCmd
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_Init
</UL>

<P><STRONG><a name="[bd]"></a>GetBitsAsByte</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, qx_parsing_functions.o(.text.GetBitsAsByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetBitsAsByte
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_ParsePacket_Cli_MoVI_Ctrl_CB
</UL>

<P><STRONG><a name="[b7]"></a>GetFloatAsSignedShort</STRONG> (Thumb, 268 bytes, Stack size 8 bytes, qx_parsing_functions.o(.text.GetFloatAsSignedShort))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetFloatAsSignedShort
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_ParsePacket_Cli_MoVI_Ctrl_CB
</UL>

<P><STRONG><a name="[b9]"></a>GetSignedShortAsSignedShort</STRONG> (Thumb, 240 bytes, Stack size 16 bytes, qx_parsing_functions.o(.text.GetSignedShortAsSignedShort))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetSignedShortAsSignedShort
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_ParsePacket_Cli_MoVI_Ctrl_CB
</UL>

<P><STRONG><a name="[b5]"></a>GetUnsignedCharAsUnsignedChar</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, qx_parsing_functions.o(.text.GetUnsignedCharAsUnsignedChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetUnsignedCharAsUnsignedChar
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_ParsePacket_Cli_MoVI_Ctrl_CB
</UL>

<P><STRONG><a name="[bb]"></a>GetUnsignedShortAsUnsignedShort</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, qx_parsing_functions.o(.text.GetUnsignedShortAsUnsignedShort))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetUnsignedShortAsUnsignedShort
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_ParsePacket_Cli_MoVI_Ctrl_CB
</UL>

<P><STRONG><a name="[a7]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, stm32f3xx_hal_dma.o(.text.HAL_DMA_Abort_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[8a]"></a>HAL_Delay</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32f3xx_hal.o(.text.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>HAL_GPIO_DeInit</STRONG> (Thumb, 262 bytes, Stack size 40 bytes, stm32f3xx_hal_gpio.o(.text.HAL_GPIO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspDeInit
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspDeInit
</UL>

<P><STRONG><a name="[79]"></a>HAL_GPIO_Init</STRONG> (Thumb, 410 bytes, Stack size 48 bytes, stm32f3xx_hal_gpio.o(.text.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_MspInit
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_ITConfig
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
</UL>

<P><STRONG><a name="[d3]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f3xx_hal_gpio.o(.text.HAL_GPIO_TogglePin))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[84]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f3xx_hal_gpio.o(.text.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Read
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Write
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Init
</UL>

<P><STRONG><a name="[8b]"></a>HAL_GetTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f3xx_hal.o(.text.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>

<P><STRONG><a name="[cd]"></a>HAL_I2CEx_ConfigAnalogFilter</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, stm32f3xx_hal_i2c_ex.o(.text.HAL_I2CEx_ConfigAnalogFilter))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ce]"></a>HAL_I2CEx_ConfigDigitalFilter</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, stm32f3xx_hal_i2c_ex.o(.text.HAL_I2CEx_ConfigDigitalFilter))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>HAL_I2C_DeInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f3xx_hal_i2c.o(.text.HAL_I2C_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_I2C_DeInit &rArr; HAL_I2C_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_Read
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_Write
</UL>

<P><STRONG><a name="[b1]"></a>HAL_I2C_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f3xx_hal_i2c.o(.text.HAL_I2C_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>

<P><STRONG><a name="[8d]"></a>HAL_I2C_Init</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, stm32f3xx_hal_i2c.o(.text.HAL_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>

<P><STRONG><a name="[7f]"></a>HAL_I2C_Mem_Read</STRONG> (Thumb, 532 bytes, Stack size 48 bytes, stm32f3xx_hal_i2c.o(.text.HAL_I2C_Mem_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_Read
</UL>

<P><STRONG><a name="[82]"></a>HAL_I2C_Mem_Write</STRONG> (Thumb, 562 bytes, Stack size 48 bytes, stm32f3xx_hal_i2c.o(.text.HAL_I2C_Mem_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_Write
</UL>

<P><STRONG><a name="[8c]"></a>HAL_I2C_MspDeInit</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f3xx_hal_msp.o(.text.HAL_I2C_MspDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_I2C_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
</UL>

<P><STRONG><a name="[8e]"></a>HAL_I2C_MspInit</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, stm32f3xx_hal_msp.o(.text.HAL_I2C_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>

<P><STRONG><a name="[c7]"></a>HAL_IncTick</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f3xx_hal.o(.text.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[94]"></a>HAL_Init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32f3xx_hal.o(.text.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[96]"></a>HAL_InitTick</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, stm32f3xx_hal.o(.text.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[97]"></a>HAL_MspInit</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f3xx_hal_msp.o(.text.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_MspInit
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[7b]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f3xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_ITConfig
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_Init
</UL>

<P><STRONG><a name="[7a]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, stm32f3xx_hal_cortex.o(.text.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_ITConfig
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_Init
</UL>

<P><STRONG><a name="[95]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f3xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[99]"></a>HAL_PCD_Init</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, stm32f3xx_hal_pcd.o(.text.HAL_PCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_PCD_Init &rArr; HAL_PCD_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9a]"></a>HAL_PCD_MspInit</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, stm32f3xx_hal_msp.o(.text.HAL_PCD_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_PCD_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_Init
</UL>

<P><STRONG><a name="[9b]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 584 bytes, Stack size 40 bytes, stm32f3xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9c]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 492 bytes, Stack size 32 bytes, stm32f3xx_hal_rcc.o(.text.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c8]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, stm32f3xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[c9]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, stm32f3xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[ca]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, stm32f3xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[9d]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1298 bytes, Stack size 48 bytes, stm32f3xx_hal_rcc.o(.text.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[88]"></a>HAL_SPI_DeInit</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, stm32f3xx_hal_spi.o(.text.HAL_SPI_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_SPI_DeInit &rArr; HAL_SPI_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Read
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Write
</UL>

<P><STRONG><a name="[c6]"></a>HAL_SPI_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f3xx_hal_spi.o(.text.HAL_SPI_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
</UL>

<P><STRONG><a name="[9f]"></a>HAL_SPI_Init</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, stm32f3xx_hal_spi.o(.text.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
</UL>

<P><STRONG><a name="[9e]"></a>HAL_SPI_MspDeInit</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f3xx_hal_msp.o(.text.HAL_SPI_MspDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_SPI_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DeInit
</UL>

<P><STRONG><a name="[a0]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, stm32f3xx_hal_msp.o(.text.HAL_SPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[87]"></a>HAL_SPI_TransmitReceive</STRONG> (Thumb, 584 bytes, Stack size 40 bytes, stm32f3xx_hal_spi.o(.text.HAL_SPI_TransmitReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Read
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Write
</UL>

<P><STRONG><a name="[98]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f3xx_hal_cortex.o(.text.HAL_SYSTICK_Config))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[a3]"></a>HAL_UARTEx_WakeupCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f3xx_hal_uart_ex.o(.text.HAL_UARTEx_WakeupCallback))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[a6]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f3xx_hal_uart.o(.text.HAL_UART_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[a2]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 646 bytes, Stack size 16 bytes, stm32f3xx_hal_uart.o(.text.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_UART_IRQHandler &rArr; HAL_UART_RxCpltCallback &rArr; FIFO_Buf_Add
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_WakeupCallback
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[a8]"></a>HAL_UART_Init</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, stm32f3xx_hal_uart.o(.text.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a9]"></a>HAL_UART_MspInit</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, stm32f3xx_hal_msp.o(.text.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[ae]"></a>HAL_UART_Receive_IT</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, stm32f3xx_hal_uart.o(.text.HAL_UART_Receive_IT))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a5]"></a>HAL_UART_RxCpltCallback</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, main.o(.text.HAL_UART_RxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_UART_RxCpltCallback &rArr; FIFO_Buf_Add
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_Buf_Add
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[b0]"></a>HAL_UART_Transmit_IT</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, stm32f3xx_hal_uart.o(.text.HAL_UART_Transmit_IT))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_SendMsg2CommsPort_CB
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
</UL>

<P><STRONG><a name="[a4]"></a>HAL_UART_TxCpltCallback</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, main.o(.text.HAL_UART_TxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_UART_TxCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_Buf_Remove
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f3xx_it.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>L3GD20_DeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, l3gd20.o(.text.L3GD20_DeInit))
<BR>[Address Reference Count : 1]<UL><LI> l3gd20.o(.data.L3gd20Drv)
</UL>
<P><STRONG><a name="[5a]"></a>L3GD20_DisableIT</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, l3gd20.o(.text.L3GD20_DisableIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = L3GD20_DisableIT &rArr; GYRO_IO_Read &rArr; SPIx_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Read
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l3gd20.o(.data.L3gd20Drv)
</UL>
<P><STRONG><a name="[59]"></a>L3GD20_EnableIT</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, l3gd20.o(.text.L3GD20_EnableIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = L3GD20_EnableIT &rArr; GYRO_IO_Read &rArr; SPIx_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Read
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l3gd20.o(.data.L3gd20Drv)
</UL>
<P><STRONG><a name="[5c]"></a>L3GD20_FilterCmd</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, l3gd20.o(.text.L3GD20_FilterCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = L3GD20_FilterCmd &rArr; GYRO_IO_Read &rArr; SPIx_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Read
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l3gd20.o(.data.L3gd20Drv)
</UL>
<P><STRONG><a name="[5b]"></a>L3GD20_FilterConfig</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, l3gd20.o(.text.L3GD20_FilterConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = L3GD20_FilterConfig &rArr; GYRO_IO_Read &rArr; SPIx_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Read
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l3gd20.o(.data.L3gd20Drv)
</UL>
<P><STRONG><a name="[58]"></a>L3GD20_INT1InterruptConfig</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, l3gd20.o(.text.L3GD20_INT1InterruptConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = L3GD20_INT1InterruptConfig &rArr; GYRO_IO_Read &rArr; SPIx_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Read
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l3gd20.o(.data.L3gd20Drv)
</UL>
<P><STRONG><a name="[53]"></a>L3GD20_Init</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, l3gd20.o(.text.L3GD20_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = L3GD20_Init &rArr; GYRO_IO_Write &rArr; SPIx_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Write
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l3gd20.o(.data.L3gd20Drv)
</UL>
<P><STRONG><a name="[57]"></a>L3GD20_LowPower</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, l3gd20.o(.text.L3GD20_LowPower))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = L3GD20_LowPower &rArr; GYRO_IO_Write &rArr; SPIx_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l3gd20.o(.data.L3gd20Drv)
</UL>
<P><STRONG><a name="[55]"></a>L3GD20_ReadID</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, l3gd20.o(.text.L3GD20_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = L3GD20_ReadID &rArr; GYRO_IO_Read &rArr; SPIx_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Read
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l3gd20.o(.data.L3gd20Drv)
</UL>
<P><STRONG><a name="[5d]"></a>L3GD20_ReadXYZAngRate</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, l3gd20.o(.text.L3GD20_ReadXYZAngRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = L3GD20_ReadXYZAngRate &rArr; GYRO_IO_Read &rArr; SPIx_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l3gd20.o(.data.L3gd20Drv)
</UL>
<P><STRONG><a name="[56]"></a>L3GD20_RebootCmd</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, l3gd20.o(.text.L3GD20_RebootCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = L3GD20_RebootCmd &rArr; GYRO_IO_Read &rArr; SPIx_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Read
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l3gd20.o(.data.L3gd20Drv)
</UL>
<P><STRONG><a name="[5f]"></a>LSM303DLHC_AccDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lsm303dlhc.o(.text.LSM303DLHC_AccDeInit))
<BR>[Address Reference Count : 1]<UL><LI> lsm303dlhc.o(.data.Lsm303dlhcDrv)
</UL>
<P><STRONG><a name="[64]"></a>LSM303DLHC_AccFilterCmd</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lsm303dlhc.o(.text.LSM303DLHC_AccFilterCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = LSM303DLHC_AccFilterCmd &rArr; COMPASSACCELERO_IO_Read &rArr; I2Cx_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_Read
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303dlhc.o(.data.Lsm303dlhcDrv)
</UL>
<P><STRONG><a name="[63]"></a>LSM303DLHC_AccFilterConfig</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lsm303dlhc.o(.text.LSM303DLHC_AccFilterConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = LSM303DLHC_AccFilterConfig &rArr; COMPASSACCELERO_IO_Read &rArr; I2Cx_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_Read
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303dlhc.o(.data.Lsm303dlhcDrv)
</UL>
<P><STRONG><a name="[5e]"></a>LSM303DLHC_AccInit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lsm303dlhc.o(.text.LSM303DLHC_AccInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = LSM303DLHC_AccInit &rArr; COMPASSACCELERO_IO_Init &rArr; I2Cx_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_Write
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303dlhc.o(.data.Lsm303dlhcDrv)
</UL>
<P><STRONG><a name="[60]"></a>LSM303DLHC_AccReadID</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lsm303dlhc.o(.text.LSM303DLHC_AccReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = LSM303DLHC_AccReadID &rArr; COMPASSACCELERO_IO_Init &rArr; I2Cx_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_Read
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303dlhc.o(.data.Lsm303dlhcDrv)
</UL>
<P><STRONG><a name="[65]"></a>LSM303DLHC_AccReadXYZ</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, lsm303dlhc.o(.text.LSM303DLHC_AccReadXYZ))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = LSM303DLHC_AccReadXYZ &rArr; COMPASSACCELERO_IO_Read &rArr; I2Cx_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303dlhc.o(.data.Lsm303dlhcDrv)
</UL>
<P><STRONG><a name="[61]"></a>LSM303DLHC_AccRebootCmd</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lsm303dlhc.o(.text.LSM303DLHC_AccRebootCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = LSM303DLHC_AccRebootCmd &rArr; COMPASSACCELERO_IO_Read &rArr; I2Cx_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_Read
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303dlhc.o(.data.Lsm303dlhcDrv)
</UL>
<P><STRONG><a name="[62]"></a>LSM303DLHC_AccZClickITConfig</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, lsm303dlhc.o(.text.LSM303DLHC_AccZClickITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = LSM303DLHC_AccZClickITConfig &rArr; COMPASSACCELERO_IO_Read &rArr; I2Cx_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_Read
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_Write
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_ITConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303dlhc.o(.data.Lsm303dlhcDrv)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f3xx_it.o(.text.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f3xx_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f3xx_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[c4]"></a>QX_BuildHeader</STRONG> (Thumb, 504 bytes, Stack size 20 bytes, qx_protocol.o(.text.QX_BuildHeader))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = QX_BuildHeader
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_SendPacket_Cli_WriteABS
</UL>

<P><STRONG><a name="[cb]"></a>QX_InitCli</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, qx_protocol.o(.text.QX_InitCli))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = QX_InitCli
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_api_init
</UL>

<P><STRONG><a name="[cc]"></a>QX_InitTxOptions</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, qx_protocol.o(.text.QX_InitTxOptions))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_api_send
</UL>

<P><STRONG><a name="[50]"></a>QX_ParsePacket_Cli_MoVI_Ctrl_CB</STRONG> (Thumb, 1600 bytes, Stack size 72 bytes, qx_protocol_app.o(.text.QX_ParsePacket_Cli_MoVI_Ctrl_CB))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = QX_ParsePacket_Cli_MoVI_Ctrl_CB &rArr; GetUnsignedShortAsUnsignedShort
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_Parser_GetMsgPtr
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_Parser_AdvMsgPtr
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddBitsAsByte
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBitsAsByte
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddUnsignedShortAsUnsignedShort
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUnsignedShortAsUnsignedShort
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddSignedShortAsSignedShort
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSignedShortAsSignedShort
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddFloatAsSignedShort
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFloatAsSignedShort
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddUnsignedCharAsUnsignedChar
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUnsignedCharAsUnsignedChar
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_Parser_SetMsgPtr
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_Parser_SetDir_WriteAbs
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_Parser_SetDir_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> qx_protocol_app.o(.text.ff_api_init)
</UL>
<P><STRONG><a name="[bf]"></a>QX_Parser_AdvMsgPtr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, qx_parsing_functions.o(.text.QX_Parser_AdvMsgPtr))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_ParsePacket_Cli_MoVI_Ctrl_CB
</UL>

<P><STRONG><a name="[c0]"></a>QX_Parser_GetMsgPtr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, qx_parsing_functions.o(.text.QX_Parser_GetMsgPtr))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_ParsePacket_Cli_MoVI_Ctrl_CB
</UL>

<P><STRONG><a name="[b2]"></a>QX_Parser_SetDir_Read</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, qx_parsing_functions.o(.text.QX_Parser_SetDir_Read))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_ParsePacket_Cli_MoVI_Ctrl_CB
</UL>

<P><STRONG><a name="[b3]"></a>QX_Parser_SetDir_WriteAbs</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, qx_parsing_functions.o(.text.QX_Parser_SetDir_WriteAbs))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_ParsePacket_Cli_MoVI_Ctrl_CB
</UL>

<P><STRONG><a name="[b4]"></a>QX_Parser_SetMsgPtr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, qx_parsing_functions.o(.text.QX_Parser_SetMsgPtr))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_ParsePacket_Cli_MoVI_Ctrl_CB
</UL>

<P><STRONG><a name="[c1]"></a>QX_SendMsg2CommsPort_CB</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, qx_protocol_app.o(.text.QX_SendMsg2CommsPort_CB))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = QX_SendMsg2CommsPort_CB &rArr; FIFO_Buf_Add
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_Buf_Add
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_Buf_Remove
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_TxMsg_Finish
</UL>

<P><STRONG><a name="[c2]"></a>QX_SendPacket_Cli_WriteABS</STRONG> (Thumb, 162 bytes, Stack size 160 bytes, qx_protocol.o(.text.QX_SendPacket_Cli_WriteABS))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = QX_SendPacket_Cli_WriteABS &rArr; QX_TxMsg_Finish &rArr; QX_SendMsg2CommsPort_CB &rArr; FIFO_Buf_Add
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_TxMsg_Finish
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_BuildHeader
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_api_send
</UL>

<P><STRONG><a name="[c5]"></a>QX_TxMsg_Finish</STRONG> (Thumb, 314 bytes, Stack size 16 bytes, qx_protocol.o(.text.QX_TxMsg_Finish))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = QX_TxMsg_Finish &rArr; QX_SendMsg2CommsPort_CB &rArr; FIFO_Buf_Add
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_SendMsg2CommsPort_CB
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_SendPacket_Cli_WriteABS
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f3xx_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f3xx_it.o(.text.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>SystemInit</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, system_stm32f3xx.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(.text)
</UL>
<P><STRONG><a name="[ab]"></a>UART_AdvFeatureConfig</STRONG> (Thumb, 230 bytes, Stack size 0 bytes, stm32f3xx_hal_uart.o(.text.UART_AdvFeatureConfig))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[ac]"></a>UART_CheckIdleState</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, stm32f3xx_hal_uart.o(.text.UART_CheckIdleState))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_CheckIdleState
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[aa]"></a>UART_SetConfig</STRONG> (Thumb, 412 bytes, Stack size 16 bytes, stm32f3xx_hal_uart.o(.text.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f3xx_it.o(.text.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USART1_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; HAL_UART_RxCpltCallback &rArr; FIFO_Buf_Add
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f3xx_it.o(.text.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>ff_api_init</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, qx_protocol_app.o(.text.ff_api_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ff_api_init &rArr; QX_InitCli
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_InitCli
</UL>
<BR>[Address Reference Count : 1]<UL><LI> qx_protocol_app.o(.data.FreeflyAPI)
</UL>
<P><STRONG><a name="[52]"></a>ff_api_send</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, qx_protocol_app.o(.text.ff_api_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = ff_api_send &rArr; QX_SendPacket_Cli_WriteABS &rArr; QX_TxMsg_Finish &rArr; QX_SendMsg2CommsPort_CB &rArr; FIFO_Buf_Add
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_SendPacket_Cli_WriteABS
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QX_InitTxOptions
</UL>
<BR>[Address Reference Count : 1]<UL><LI> qx_protocol_app.o(.data.FreeflyAPI)
</UL>
<P><STRONG><a name="[4c]"></a>main</STRONG> (Thumb, 1100 bytes, Stack size 120 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = main &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_Buf_Init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_Init
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigDigitalFilter
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigAnalogFilter
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_GetXYZ
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_ReadID
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_GetXYZ
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Init
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_TogglePin
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[dc]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[da]"></a>__hardfp_atan</STRONG> (Thumb, 622 bytes, Stack size 48 bytes, atan.o(i.__hardfp_atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[d8]"></a>__hardfp_atan2</STRONG> (Thumb, 448 bytes, Stack size 56 bytes, atan2.o(i.__hardfp_atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7]"></a>__hardfp_sqrt</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, sqrt.o(i.__hardfp_sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __hardfp_sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[df]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[db]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_infnan &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[e0]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[dd]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_underflow &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[f5]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[f6]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[f7]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[e3]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[e1]"></a>atan</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[de]"></a>fabs</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fabs.o(i.fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[85]"></a>SPIx_Init</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, stm32f3_discovery.o(.text.SPIx_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SPIx_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_GetState
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Read
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Write
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GYRO_IO_Init
</UL>

<P><STRONG><a name="[7d]"></a>I2Cx_Init</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, stm32f3_discovery.o(.text.I2Cx_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = I2Cx_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_GetState
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_Read
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_Write
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMPASSACCELERO_IO_Init
</UL>

<P><STRONG><a name="[92]"></a>I2C_IsAcknowledgeFailed</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, stm32f3xx_hal_i2c.o(.text.I2C_IsAcknowledgeFailed))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[90]"></a>I2C_WaitOnSTOPFlagUntilTimeout</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32f3xx_hal_i2c.o(.text.I2C_WaitOnSTOPFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_WaitOnSTOPFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[91]"></a>I2C_RequestMemoryWrite</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, stm32f3xx_hal_i2c.o(.text.I2C_RequestMemoryWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = I2C_RequestMemoryWrite &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[8f]"></a>I2C_RequestMemoryRead</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, stm32f3xx_hal_i2c.o(.text.I2C_RequestMemoryRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = I2C_RequestMemoryRead &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[a1]"></a>SPI_EndRxTxTransaction</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, stm32f3xx_hal_spi.o(.text.SPI_EndRxTxTransaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_EndRxTxTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>

<P><STRONG><a name="[4f]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f3xx_hal_uart.o(.text.UART_DMAAbortOnError))
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f3xx_hal_uart.o(.text.HAL_UART_IRQHandler)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
